{"version":3,"sources":["redux/types.js","components/CounterPanel.jsx","redux/actionCreators.js","App.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["INC","DEC","RND_ASYNC","THEME_TOGGLE","connect","state","counter","dispatch","inc","type","dec","rndAsync","setTimeout","min","max","payload","Math","floor","random","themeToggle","console","log","className","onClick","themeName","theme","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAaA,EAAM,MACNC,EAAM,MACNC,EAAY,YACZC,EAAe,e,OCwCbC,eAbS,SAACC,GACvB,MAAO,CAAEC,QAASD,EAAMC,YAGC,SAACC,GAC1B,MAAO,CACLC,IAAK,kBAAMD,EC7BN,CAAEE,KAAMT,KD8BbU,IAAK,kBAAMH,EClCN,CAAEE,KAAMR,KDmCbU,SAAU,kBAAMJ,GCvBX,SAAUA,GACfK,YAAW,WALb,IAA+BC,EAAKC,EAMhCP,EAAS,CAAEE,KAAMP,EAAWa,SANDF,EAMgC,EAN3BC,EAM8B,IALzDE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,QAMjD,SDqBHM,YAAa,kBAAMZ,EChBd,CAAEE,KAAMN,EAAcY,QAAS,cDoBzBX,EAvCM,SAAC,GAAkD,IAAhDE,EAA+C,EAA/CA,QAASE,EAAsC,EAAtCA,IAAKE,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,SAAUQ,EAAkB,EAAlBA,YAEnD,OADAC,QAAQC,IAAIf,GAEV,sBAAKgB,UAAU,iBAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgChB,IAChC,sBAAKgB,UAAU,WAAf,UACE,wBAAQC,QAASb,EAAKD,KAAK,SAASa,UAAU,qBAA9C,uBAGA,wBAAQC,QAASf,EAAKC,KAAK,SAASa,UAAU,sBAA9C,uBAGA,wBAAQC,QAASZ,EAAUF,KAAK,SAASa,UAAU,sBAAnD,+BAKF,qBAAKA,UAAU,2BAAf,SACE,wBAAQC,QAASJ,EAAaG,UAAU,0CAAxC,kCEXR,IAMelB,eANS,SAACC,GACvB,MAAO,CACLmB,UAAWnB,EAAMoB,MAAMD,aAIZpB,EAdf,YAA6B,IAAdoB,EAAa,EAAbA,UACb,OACE,qBAAKF,UAAS,cAASE,GAAvB,SACE,cAAC,EAAD,S,qBC4BSE,EALKC,YAAgB,CAClCrB,QA3BqB,WAAwB,IAAvBD,EAAsB,uDAAd,EAAGuB,EAAW,uCAC5C,OAAQA,EAAOnB,MACb,KAAKT,EACH,OAAOK,EAAQ,EACjB,KAAKJ,EACH,OAAOI,EAAQ,EACjB,KAAKH,EACH,OAAO0B,EAAOb,QAEhB,QACE,OAAOV,IAkBXoB,MAdmB,WAA6C,IAA5CpB,EAA2C,uDAAnC,CAAEmB,UAAW,SAAWI,EAAW,uCAC/D,OAAQA,EAAOnB,MACb,KAAKN,EACH,MAA2B,UAApBE,EAAMmB,UAAN,2BACEnB,GADF,IACSmB,UAAW,SADpB,2BAEEnB,GAFF,IAESmB,UAAW,UAE7B,QACE,OAAOnB,MCpBPwB,EAAQC,YAAYJ,EAAaK,YAAgBC,MAEvDH,EAAMI,WAAU,kBAAMb,QAAQC,IAAI,QAASQ,EAAMK,eAElCL,Q,MCAfM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.43cc85d8.chunk.js","sourcesContent":["export const INC = 'INC';\r\nexport const DEC = 'DEC';\r\nexport const RND_ASYNC = 'RND_ASYNC';\r\nexport const THEME_TOGGLE = 'THEME_TOGGLE';\r\n","import { connect } from 'react-redux';\r\n// import * as actions from '../redux/actionCreators';\r\nimport { inc, dec, rndAsync, themeToggle } from '../redux/actionCreators';\r\n\r\nconst CounterPanel = ({ counter, inc, dec, rndAsync, themeToggle }) => {\r\n  console.log(counter);\r\n  return (\r\n    <div className=\"py-2 container\">\r\n      <h1 className=\"counter-holder\">{counter}</h1>\r\n      <div className=\"counting\">\r\n        <button onClick={dec} type=\"button\" className=\"btn btn-danger dec\">\r\n          decrement\r\n        </button>\r\n        <button onClick={inc} type=\"button\" className=\"btn btn-success inc\">\r\n          increment\r\n        </button>\r\n        <button onClick={rndAsync} type=\"button\" className=\"btn btn-primary rnd\">\r\n          delayed random\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"py-2 theme-toggler mt-20\">\r\n        <button onClick={themeToggle} className=\"theme-toggler__button btn btn-secondary\">\r\n          change theme\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { counter: state.counter };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    inc: () => dispatch(inc()),\r\n    dec: () => dispatch(dec()),\r\n    rndAsync: () => dispatch(rndAsync()),\r\n    themeToggle: () => dispatch(themeToggle()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CounterPanel);\r\n","import { DEC, INC, RND_ASYNC, THEME_TOGGLE } from './types';\r\n\r\nexport const dec = () => {\r\n  return { type: DEC };\r\n};\r\n\r\nexport const inc = () => {\r\n  return { type: INC };\r\n};\r\n\r\nexport const rndAsync = () => {\r\n  function randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\n  return function (dispatch) {\r\n    setTimeout(() => {\r\n      dispatch({ type: RND_ASYNC, payload: randomIntFromInterval(1, 100) });\r\n    }, 1000);\r\n  };\r\n};\r\n\r\nexport const themeToggle = () => {\r\n  return { type: THEME_TOGGLE, payload: 'light' };\r\n};\r\n","import { connect } from 'react-redux';\nimport CounterPanel from './components/CounterPanel';\n\nfunction App({ themeName }) {\n  return (\n    <div className={`app ${themeName}`}>\n      <CounterPanel />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    themeName: state.theme.themeName,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { INC, DEC, RND_ASYNC, THEME_TOGGLE } from './types';\r\n\r\nconst counterReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case INC:\r\n      return state + 1;\r\n    case DEC:\r\n      return state - 1;\r\n    case RND_ASYNC:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst themeReducer = (state = { themeName: 'light' }, action) => {\r\n  switch (action.type) {\r\n    case THEME_TOGGLE:\r\n      return state.themeName === 'light'\r\n        ? { ...state, themeName: 'dark' }\r\n        : { ...state, themeName: 'light' };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  counter: counterReducer,\r\n  theme: themeReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nstore.subscribe(() => console.log('store', store.getState()));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// const counterHolder = document.querySelector('.counter-holder');\r\n\r\n// console.log(store.getState());\r\n// document.querySelector('body').classList.add('light');\r\n\r\n// store.subscribe(() => {\r\n//   console.log('state', store.getState());\r\n//   counterHolder.innerHTML = store.getState().counter;\r\n\r\n//   document.querySelector('body').classList = null;\r\n//   document.querySelector('body').classList.add(store.getState().theme.theme);\r\n// });\r\n\r\n// counterHolder.textContent = store.getState().counter;\r\n\r\n// const { dec, inc, rndAsync, themeToggle } = bindActionCreators(actions, dispatch);\r\n\r\n// document.querySelector('.dec').addEventListener('click', dec);\r\n// document.querySelector('.inc').addEventListener('click', inc);\r\n// document.querySelector('.rnd').addEventListener('click', rndAsync);\r\n\r\n// document.querySelector('.theme-toggler__button').addEventListener('click', themeToggle);\r\n"],"sourceRoot":""}